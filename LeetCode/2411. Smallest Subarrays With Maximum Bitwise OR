class Solution {
public:
    vector<int> smallestSubarrays(vector<int>& nums) {
        vector<vector<int>> bit(32);
        for(int i=0;i<nums.size();i++){
            for(int j=0;j<32;j++){
                if(nums[i]&(1<<j)){
                    bit[j].push_back(i);
                }
            }
        }
        int i=0,ma=0,j=0,cur=0;
        for(i=0;i<nums.size();i++){
           cur = (cur|nums[i]);
           if(cur>ma){
               ma=cur;
               j=i;
           }
        }
        vector<int> ans(nums.size());
        ans[0]=j+1;
        for(int i=1;i<nums.size();i++){
            if(j<i)j=i;
            for(int k=0;k<32;k++){
                if(nums[i-1]&(1<<k)){
                    if(bit[k].back()==i-1) continue;
                    int it = (*upper_bound(bit[k].begin(), bit[k].end(), i-1));
                    if(it>j){
                        j=it;
                    }
                }
            }
            ans[i]=j-i+1;
        }
        return ans;
    }
};
